{"ast":null,"code":"import { HelloRequest } from '../proto/hello_pb';\nimport { HelloServiceClient } from '../proto/hello_grpc_web_pb';\nimport { LoginRequest } from '../proto/auth_config_pb';\nimport { AuthorityManagementClient } from '../proto/auth_config_grpc_web_pb';\nexport default {\n  name: 'HelloWorld',\n\n  data() {},\n\n  methods: {\n    login: function () {\n      console.log('ss');\n      this.client = new AuthorityManagementClient('http://192.168.10.152:8509', null, null);\n      const request = new LoginRequest();\n      request.setAccount(10);\n      request.setPasswd(10);\n      this.client.login(request, {\n        \"Content-Type\": \"application/json\"\n      }, (err, response) => {\n        if (err) {\n          console.log(`Unexpected error for login: code = ${err.code}` + `, message = \"${err.message}\"`);\n        } else {\n          console.log(response.getState());\n        }\n      });\n    },\n    login1: function () {\n      console.log('enter testResponse');\n      this.client = new HelloServiceClient('http://192.168.10.152:8509', null, null);\n      var metadata = {\n        \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTEwMjc1NDIsImlzcyI6IjQyc2dqOEs0ZGJLNEh5REgwUm8xVXNxVzk0YUhoZnJHIiwibmFtZSI6IjEifQ.2JlDTS-BITgb1TL1azkvE755O6_-URTDj_Hs2g6hQkQ\"\n      };\n      const request = new HelloRequest();\n      request.setGreeting('hi');\n      this.client.sayHello(request, metadata, (err, response) => {\n        if (err) {\n          console.log(`Unexpected error for login: code = ${err.code}` + `, message = \"${err.message}\"`);\n        } else {\n          console.log(response.getReply());\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAaA,SAAQA,YAAR,QAA2B,mBAA3B;AACA,SAAQC,kBAAR,QAAiC,4BAAjC;AAEA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAAQC,yBAAR,QAAwC,kCAAxC;AAGA,eAAe;AACbC,MAAI,EAAE,YADO;;AAEbC,MAAI,GAAE,CAEL,CAJY;;AAKbC,SAAO,EAAE;AACPC,SAAK,EAAC,YAAU;AACdC,aAAO,CAACC,GAAR,CAAY,IAAZ;AAEA,WAAKC,MAAL,GAAY,IAAIP,yBAAJ,CACV,4BADU,EAEV,IAFU,EAGV,IAHU,CAAZ;AAMA,YAAMQ,OAAO,GAAC,IAAIT,YAAJ,EAAd;AACAS,aAAO,CAACC,UAAR,CAAmB,EAAnB;AACAD,aAAO,CAACE,SAAR,CAAkB,EAAlB;AAEA,WAAKH,MAAL,CAAYH,KAAZ,CAAkBI,OAAlB,EAA0B;AAAC,wBAAe;AAAhB,OAA1B,EAA8D,CAACG,GAAD,EAAKC,QAAL,KAAgB;AAC5E,YAAID,GAAJ,EAAS;AACPN,iBAAO,CAACC,GAAR,CACG,sCAAqCK,GAAG,CAACE,IAAK,EAA/C,GACC,gBAAeF,GAAG,CAACG,OAAQ,GAF9B;AAIF,SALA,MAKO;AACLT,iBAAO,CAACC,GAAR,CAAYM,QAAQ,CAACG,QAAT,EAAZ;AACF;AACD,OATD;AAWD,KAzBM;AA0BPC,UAAM,EAAC,YAAW;AAChBX,aAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,WAAKC,MAAL,GAAc,IAAIT,kBAAJ,CACZ,4BADY,EAEZ,IAFY,EAGZ,IAHY,CAAd;AAKA,UAAImB,QAAQ,GAAC;AAAC,yBAAgB;AAAjB,OAAb;AACA,YAAMT,OAAM,GAAI,IAAIX,YAAJ,EAAhB;AACAW,aAAO,CAACU,WAAR,CAAoB,IAApB;AACA,WAAKX,MAAL,CAAYY,QAAZ,CAAqBX,OAArB,EAA6BS,QAA7B,EAAuC,CAACN,GAAD,EAAMC,QAAN,KAAmB;AACxD,YAAID,GAAJ,EAAS;AACPN,iBAAO,CAACC,GAAR,CACG,sCAAqCK,GAAG,CAACE,IAAK,EAA/C,GACC,gBAAeF,GAAG,CAACG,OAAQ,GAF9B;AAIF,SALA,MAKO;AACLT,iBAAO,CAACC,GAAR,CAAYM,QAAQ,CAACQ,QAAT,EAAZ;AACF;AACD,OATD;AAUF;AA9CO;AALI,CAAf","names":["HelloRequest","HelloServiceClient","LoginRequest","AuthorityManagementClient","name","data","methods","login","console","log","client","request","setAccount","setPasswd","err","response","code","message","getState","login1","metadata","setGreeting","sayHello","getReply"],"sourceRoot":"","sources":["/home/mimo/Work/MicroService/demo/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"button-size-demo\">\n\n    <a-button type=\"primary\" @click=\"login\">鉴权测试</a-button>\n    <br>\n    <el-button type=\"primary\" class=\"login-btn\" >登录</el-button>\n    <br>\n    <a-button type=\"primary\" @click=\"login1\">demo测试</a-button>\n    <br>\n </div>\n</template>\n\n<script>\nimport {HelloRequest} from '../proto/hello_pb'\nimport {HelloServiceClient} from '../proto/hello_grpc_web_pb'\n\nimport {LoginRequest} from '../proto/auth_config_pb'\nimport {AuthorityManagementClient} from '../proto/auth_config_grpc_web_pb'\n\n\nexport default {\n  name: 'HelloWorld',\n  data(){\n\n  },\n  methods: {\n    login:function(){\n      console.log('ss')\n\n      this.client=new AuthorityManagementClient(\n        'http://192.168.10.152:8509',\n        null,\n        null\n      )\n\n      const request=new LoginRequest()\n      request.setAccount(10)\n      request.setPasswd(10)\n\n      this.client.login(request,{\"Content-Type\":\"application/json\"},(err,response)=>{\n        if (err) {\n          console.log(\n            `Unexpected error for login: code = ${err.code}` +\n            `, message = \"${err.message}\"`)\n\n        } else {\n          console.log(response.getState())\n        }\n      })\n\n    },\n    login1:function() {\n      console.log('enter testResponse')\n      this.client = new HelloServiceClient(\n        'http://192.168.10.152:8509',\n        null,\n        null\n      )\n      var metadata={\"Authorization\":\"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTEwMjc1NDIsImlzcyI6IjQyc2dqOEs0ZGJLNEh5REgwUm8xVXNxVzk0YUhoZnJHIiwibmFtZSI6IjEifQ.2JlDTS-BITgb1TL1azkvE755O6_-URTDj_Hs2g6hQkQ\"}\n      const request = new HelloRequest()\n      request.setGreeting('hi')\n      this.client.sayHello(request,metadata, (err, response) => {\n        if (err) {\n          console.log(\n            `Unexpected error for login: code = ${err.code}` +\n            `, message = \"${err.message}\"`)\n\n        } else {\n          console.log(response.getReply())\n        }\n      })\n    }\n  }, \n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n.button-size-demo > button {\n  margin-right: 8px;\n}\n.button-size-demo > button {\n  margin-right: 8px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}